#ifndef UAIOH
#define UAIOH

#include "../../../Rdk/Deploy/Include/rdk.h"

namespace RDK {

class RDK_LIB_TYPE UIO: public UNet
{
protected: // Параметры
// Определяет направление работы класса
// 0 - ввод информации, 1 - вывод
UProperty<int, UIO, ptPubParameter> Direction;

protected: // Данные
// Хранилище двоичных данных для ввода вывода
USerStorageBinary BinaryStorage;

public: // Методы
// --------------------------
// Конструкторы и деструкторы
// --------------------------
UIO(void);
virtual ~UIO(void);
// --------------------------

// --------------------------
// Скрытые методы управления счетом
// --------------------------
protected:
// Восстановление настроек по умолчанию и сброс процесса счета
virtual bool ADefault(void);

// Обеспечивает сборку внутренней структуры объекта
// после настройки параметров
// Автоматически вызывает метод Reset() и выставляет Ready в true
// в случае успешной сборки
virtual bool ABuild(void);

// Сброс процесса счета.
virtual bool AReset(void);

// Выполняет расчет этого объекта
virtual bool ACalculate(void);
// --------------------------

// --------------------------
// Скрытые методы управления счетом
// --------------------------
protected:
// Восстановление настроек по умолчанию и сброс процесса счета
virtual bool AIODefault(void);

// Обеспечивает сборку внутренней структуры объекта
// после настройки параметров
// Автоматически вызывает метод Reset() и выставляет Ready в true
// в случае успешной сборки
virtual bool AIOBuild(void);

// Сброс процесса счета.
virtual bool AIOReset(void);

// Выполняет расчет этого объекта
virtual bool AIOCalculate(void);
// --------------------------


};


}






//---------------------------------------------------------------------------
#endif
